{"version":3,"sources":["Components/QuoteBox.jsx","App.js","index.js"],"names":["QuoteBox","accentColor","handleNewQuote","currentQuote","quote","author","id","className","style","backgroundColor","icon","faQuoteLeft","Button","href","faTwitter","onClick","colorsArr","randomArrVal","arr","console","log","randomNum","Math","floor","random","length","useFetch","url","useState","data","setData","a","fetch","response","json","useEffect","fetchData","App","setAccentColor","quotes","setCurrentQuote","quoteArr","color","Spinner","animation","variant","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TA+CeA,EAvCE,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACvCC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OACf,OACE,sBACEC,GAAG,YACHC,UAAU,YACVC,MAAO,CAAEC,gBAAiB,SAH5B,UAKE,sBAAKF,UAAU,aAAf,UACE,cAAC,IAAD,CAAiBG,KAAMC,IAAaJ,UAAU,eAC9C,sBAAMD,GAAG,OAAOC,UAAU,QAA1B,SACGH,OAGL,qBAAKG,UAAU,eAAf,SACE,uBAAMD,GAAG,SAAT,cAAoBD,OAEtB,sBAAKE,UAAU,UAAf,UACE,cAACK,EAAA,EAAD,CACEN,GAAG,cACHC,UAAU,4BACVC,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,IAC7BY,KAAI,gDAA2CT,EAA3C,YAAoDC,EAApD,mBAJN,SAME,cAAC,IAAD,CAAiBK,KAAMI,QAEzB,cAACF,EAAA,EAAD,CACEN,GAAG,YACHC,UAAU,uBACVQ,QAAS,kBAAMb,KACfM,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,IAJ/B,8B,QC3BFe,EAAY,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAS,SAAS,SAAS,SAAS,SAAS,UAClLC,EAAe,SAACC,GACpBC,QAAQC,IAAIF,GACZ,IAAIG,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAIO,QAE/C,OADAN,QAAQC,IAAIF,EAAIG,IACTH,EAAIG,IAGPK,EAAW,SAAAC,GACf,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KADsB,4CAGtB,8BAAAC,EAAA,sEACyBC,MAAML,GAD/B,cACQM,EADR,gBAEqBA,EAASC,OAF9B,OAEQA,EAFR,OAGEJ,EAAQI,GAHV,4CAHsB,sBAUtB,OADAC,qBAAU,YATY,mCASJC,KAAe,CAACT,IAC3BE,GAkCMQ,MA/Bf,WACE,MAAsCT,mBAAS,WAA/C,mBAAO3B,EAAP,KAAoBqC,EAApB,KACMC,EAASb,EAzBF,0IA0Bb,EAAwCE,mBAAS,CAAEvB,OAAQ,GAAID,MAAO,KAAtE,mBAAOD,EAAP,KAAqBqC,EAArB,KAEAL,qBAAU,WACJI,GACFrC,MAED,CAACqC,IAEJ,IAAMrC,EAAiB,WACrBoC,EAAe,IAAD,OAAKrB,EAAaD,KAChC,IAAIyB,EAAWF,EAAOA,OACtBC,EAAgBvB,EAAawB,KAG/B,OACE,qBAAKlC,UAAU,MAAMC,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,GAAeyC,MAAM,GAAD,OAAKzC,IAA3E,SAE4B,KAAvBE,EAAaC,MACZ,cAACuC,EAAA,EAAD,CAASpC,UAAU,kBAAkBqC,UAAU,OAAOC,QAAQ,QAAQC,KAAK,SAA3E,SACE,sBAAMvC,UAAU,UAAhB,0BAGF,cAAC,EAAD,CAAUN,YAAaA,EAAaE,aAAcA,EAAcD,eAAgBA,O,MC/C1F6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.16e9a34e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"./QuoteBox.scss\";\r\n\r\nconst QuoteBox = ({ accentColor, handleNewQuote, currentQuote }) => {\r\n  const { quote, author } = currentQuote;\r\n  return (\r\n    <div\r\n      id=\"quote-box\"\r\n      className=\"quote-box\"\r\n      style={{ backgroundColor: \"white\" }}\r\n    >\r\n      <div className=\"quote-text\">\r\n        <FontAwesomeIcon icon={faQuoteLeft} className=\"quote-mark\" />\r\n        <span id=\"text\" className=\"quote\">\r\n          {quote}\r\n        </span>\r\n      </div>\r\n      <div className=\"quote-author\">\r\n        <span id=\"author\">-{author}</span>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <Button\r\n          id=\"tweet-quote\"\r\n          className=\"icon quote-btn transition\"\r\n          style={{ backgroundColor: `${accentColor}` }}\r\n          href={`https://twitter.com/intent/tweet?text=${quote}-${author}&hashtags=quote`}\r\n        >\r\n          <FontAwesomeIcon icon={faTwitter} />\r\n        </Button>\r\n        <Button\r\n          id=\"new-quote\"\r\n          className=\"quote-btn transition\"\r\n          onClick={() => handleNewQuote()}\r\n          style={{ backgroundColor: `${accentColor}` }}\r\n        >\r\n          New Quote\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteBox;","import React, { useState, useEffect } from 'react';\r\nimport './App.scss';\r\nimport QuoteBox from \"./Components/QuoteBox.jsx\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst target = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n\r\nconst colorsArr = ['BBADA0', \"0B1D51\", 'CB769E', '69995D', 'D2D7DF', '3AA7A3', 'A1869E', '000000', 'AFECE7', '81F499', '890620', 'B6465F', '8ACDEA','a81f61','e7d146','c89202','372f51','31f085'];\r\nconst randomArrVal = (arr) => {\r\n  console.log(arr)\r\n  let randomNum = Math.floor(Math.random() * arr.length)\r\n  console.log(arr[randomNum])\r\n  return arr[randomNum]\r\n}\r\n\r\nconst useFetch = url => {\r\n  const [data, setData] = useState(null);\r\n\r\n  async function fetchData() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    setData(json);\r\n  }\r\n\r\n  useEffect(() => { fetchData() }, [url]);\r\n  return data;\r\n};\r\n\r\nfunction App() {\r\n  const [accentColor, setAccentColor] = useState('#4FC1FF')\r\n  const quotes = useFetch(target)\r\n  const [currentQuote, setCurrentQuote] = useState({ author: '', quote: '' })\r\n  \r\n  useEffect(() => {\r\n    if (quotes) {\r\n      handleNewQuote()\r\n    }\r\n  }, [quotes])\r\n\r\n  const handleNewQuote = () => {\r\n    setAccentColor(`#${randomArrVal(colorsArr)}`)\r\n    let quoteArr = quotes.quotes\r\n    setCurrentQuote(randomArrVal(quoteArr))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{ backgroundColor: `${accentColor}`, color: `${accentColor}` }}>\r\n      {\r\n        (currentQuote.quote === \"\") ?\r\n          <Spinner className=\"loading-spinner\" animation=\"grow\" variant=\"light\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n          :\r\n          <QuoteBox accentColor={accentColor} currentQuote={currentQuote} handleNewQuote={handleNewQuote} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}